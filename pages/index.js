import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { nanoid } from 'nanoid'
import { supabase } from '../utils/supabase'
import { useState, useEffect } from 'react'
export default function Home() {
  const [longUrl, setLongUrl] = useState('');
  const [error, setError] = useState(false)
  const [value, setValue] = useState(null)
  let regex = /[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/gi
  // console.log(longUrl, 11)

  function onChange(event) {
    setLongUrl(event.target.value);
    console.log(longUrl)
  }
  useEffect(() => {
    regex.test(longUrl) ? setError(false) : setError(true)
  }, [longUrl])

  // const onChange = (event) => {
  //   setLongUrl(event.target.value);
  //   // console.log(regex.test(longUrl))
  //   console.log(longUrl)
  //   console.log(event.target.value)
  //   regex.test(event.target.value) ? setError(false) : setError(true)
  //   // if (regex.test(longUrl)) {
  //   //   setError(false)
  //   // }
  //   // setError(false)
  // };
  function handleSubmit(event) {
    event.preventDefault()
    regex.test(longUrl) ? setError(false) : setError(true)
    fetch('http://localhost:3000/api/url', {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ longUrl: longUrl })
    }).then(function (response) {
      return response.text();
    }).then(function (data) {
      console.log(data);
    })

    // fetch('http://localhost:3000/api/url').then(res => res.json()).then(data => setValue(data))
  }




  // function validate(values) {
  //   let errors = {};
  //   if (!values.email) {
  //     errors.email = 'Email address is required';
  //   } else if (!/\S+@\S+\.\S+/.test(values.email)) {
  //     errors.email = 'Email address is invalid';
  //   }
  //   return errors;
  // };



  // console.log(supabase)
  return (
    <div className={styles.container}>
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}
      {/*
      <input
        className="input"
        type="text"
        name="url"
        onChange={handleChange}
        value={values.email}
        required
      /> */}




      <form onSubmit={handleSubmit}>

        <label htmlFor="usernameId">Username:</label>
        <input id="usernameId" type="text" onChange={onChange} value={longUrl} />


        {/* {error ? 'Fix the url' : ''} */}
        <button type="submit">Submit</button>
      </form>

      {/* <input onChange={changeHandler} />
      <button >Create</button> */}
      {/* {nanoid(8)} */}
    </div>
  )
}
